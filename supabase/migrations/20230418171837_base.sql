-- DROP SCHEMA public CASCADE;


create schema if not exists "public";
DROP TABLE IF EXISTS "public"."page_module" CASCADE;
DROP TABLE IF EXISTS "public"."page_record" CASCADE;
DROP TABLE IF EXISTS "public"."app" CASCADE;
DROP TABLE IF EXISTS "public"."record_table" CASCADE;
DROP TABLE IF EXISTS "public"."record_table_column_labels" CASCADE;
DROP TABLE IF EXISTS "public"."module_section" CASCADE;
DROP TABLE IF EXISTS "public"."module_section_data" CASCADE;
DROP TABLE IF EXISTS "public"."record_section_data" CASCADE;
DROP TABLE IF EXISTS "public"."record_section" CASCADE;


CREATE table IF NOT EXISTS "public"."app" (
    "id" bigint PRIMARY KEY generated by default as identity,
    "url_name" text UNIQUE not null,
    "logo_url" text not null,
    "default_url_module_name" text,
    "admin" text,
    "created_at" timestamp without time zone not null default now()
);

CREATE table IF NOT EXISTS "public"."members" (
    "id" bigint PRIMARY KEY generated by default as identity,
    "user_id" uuid references auth.users(id),
    "first_name" text,
    "last_name" text,
    "user_name" text,
    "city" text,
    "country" text,
    "created_at" timestamp without time zone not null default now()
);



CREATE table IF NOT EXISTS "public"."record_table" (
    "id" bigint PRIMARY KEY generated by default as identity,
    "name" text not null UNIQUE,
    "data_jsonschema" text,
    "created_at" timestamp without time zone not null default now()
);

CREATE TABLE IF NOT EXISTS "public"."record_table_column_labels" (
    "id" bigint generated by default as identity NOT NULL UNIQUE,
    "record_table_id" bigint NOT NULL REFERENCES record_table(id),
    "column_name" text   NOT NULL,
    "label_name" text   NOT NULL,
    "is_external_link" boolean NOT NULL DEFAULT false,
      CONSTRAINT "pk_record_table_column_labels" PRIMARY KEY (
        "record_table_id","column_name"
     )
);


--//-- 



CREATE table IF NOT EXISTS "public"."page_module" (
    "id" bigint generated by default as identity UNIQUE NOT NULL,
    "url_name" text,
    "app" text,
    "title" text,
    "created_at" timestamp without time zone not null default now(),
    CONSTRAINT "pk_page_module" PRIMARY KEY (
        "url_name","app"
     )
);


CREATE table IF NOT EXISTS "public"."module_section_data" (
    "id" bigint PRIMARY KEY generated by default as identity,
    "get_section_data_sql" text not null,
    "description" text
);

CREATE table IF NOT EXISTS "public"."module_section" (
    "id" bigint PRIMARY KEY generated by default as identity,
    "title" text   NOT NULL,
    "record_table" text NOT NULL REFERENCES record_table(name),
    "joining_table" text REFERENCES record_table(name),
    "second_parent_table" text REFERENCES record_table(name),
    "app_filter_on_table" text REFERENCES record_table(name),
    "richtext" text,
    "module_section_data" bigint REFERENCES module_section_data(id) NOT NULL,
    "page_module" bigint NOT NULL REFERENCES page_module(id),
    "vertical_page_position" int,
    "created_at" timestamp without time zone not null default now()
);


CREATE table IF NOT EXISTS "public"."page_record" (
    "id" bigint generated by default as identity UNIQUE not null,
    "app" text not null REFERENCES app(url_name),
    "title" text not null,
    "description" text,
    "record_name" text not null REFERENCES record_table(name),
    "created_at" timestamp without time zone not null default now(),
    CONSTRAINT "pk_page_record" PRIMARY KEY (
        "app","record_name"
     )
);

CREATE table IF NOT EXISTS "public"."record_section_data" (
    "id" bigint PRIMARY KEY generated by default as identity,
    "get_section_data_sql" text not null,
    "description" text not null
);

CREATE table IF NOT EXISTS "public"."record_section" (
    "id" bigint PRIMARY KEY generated by default as identity,
    "title" text   NULL,
    "richtext" text NULL,
    "page_record" bigint NOT NULL REFERENCES page_record(id),
    "joining_table" text REFERENCES record_table(name),
    "second_parent_table" text REFERENCES record_table(name),
    "record_section_data" bigint NOT NULL REFERENCES record_section_data(id),
    "vertical_page_position" int NULL,
    "createdAt" TIMESTAMP  DEFAULT now() NOT NULL
);



-- set check_function_bodies = off;

