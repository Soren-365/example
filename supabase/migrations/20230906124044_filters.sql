create schema if not exists "filters";

DROP TABLE IF EXISTS "filters"."app_whitefilter_st" CASCADE;
DROP TABLE IF EXISTS "filters"."record_section_whitefilter_st" CASCADE;
DROP TABLE IF EXISTS "filters"."record_section_blackfilter_st" CASCADE;
DROP TABLE IF EXISTS "filters"."record_page_columns_shown" CASCADE;
DROP TABLE IF EXISTS "filters"."module_section_columns_shown" CASCADE;
DROP TABLE IF EXISTS "filters"."record_section_columns_shown"CASCADE;

CREATE TABLE IF NOT EXISTS "filters"."record_section_columns_shown" (
    "id" bigint generated by default as identity NOT NULL,
    "record_section_id" bigint REFERENCES public.record_section(id),
    "record_table_column_labels_id" bigint REFERENCES public.record_table_column_labels(id),
    "column_position" integer,
    "ui_links_to_record" boolean  NOT NULL DEFAULT false,
    CONSTRAINT "pk_record_section_columns_shown" PRIMARY KEY (
        "record_section_id","record_table_column_labels_id"
     )
);

-- ALTER TABLE "filters"."record_section_columns_shown" ADD CONSTRAINT fk_record_section_column_labels_id FOREIGN KEY (record_table_column_labels_id) REFERENCES public.record_table_column_labels (id);



CREATE TABLE IF NOT EXISTS "filters"."record_page_columns_shown" (
    "id" bigint generated by default as identity NOT NULL,
    "page_record_id" bigint  REFERENCES public.page_record(id),
    "record_table_column_labels_id" bigint REFERENCES public.record_table_column_labels(id),
    "column_position" integer,
    "ui_links_to_record" boolean  NOT NULL DEFAULT false,
    CONSTRAINT "pk_record_page_columns_shown" PRIMARY KEY (
        "page_record_id","record_table_column_labels_id"
     )
);


CREATE TABLE IF NOT EXISTS "filters"."module_section_columns_shown" (
    "id" bigint generated by default as identity NOT NULL UNIQUE,
    "module_section_id" bigint REFERENCES public.module_section(id),
    "record_table_column_labels_id" bigint REFERENCES public.record_table_column_labels(id),
    "column_position" integer NOT NULL,
    "ui_links_to_record" boolean  NOT NULL DEFAULT false,
    CONSTRAINT "pk_module_section_columns_shown" PRIMARY KEY (
        "module_section_id","record_table_column_labels_id"
     )
);


create table "filters"."app_whitefilter_st" (
    "id" bigint PRIMARY KEY generated by default as identity,
    "filter" text not null REFERENCES conferati.filtertypes_st(type),
    "table_address" text not null REFERENCES public.record_table(name),
    "app_id" bigint not null REFERENCES public.app(id),
    "column_address" text not null DEFAULT 'type',
    "created_at" timestamp with time zone default now()
);


create table "filters"."record_section_whitefilter_st" (
    "id" bigint PRIMARY KEY generated by default as identity,
    "filter" text not null REFERENCES conferati.filtertypes_st(type),
    "table_address" text not null REFERENCES public.record_table(name),
    "record_section_id" bigint not null REFERENCES public.record_section(id),
    "column_address" text not null DEFAULT 'type',
    "created_at" timestamp with time zone default now()
);

create table "filters"."record_section_blackfilter_st" (
    "id" bigint PRIMARY KEY generated by default as identity,
    "filter" text not null REFERENCES conferati.filtertypes_st(type),
    "table_address" text not null REFERENCES public.record_table(name),
    "record_section_id" bigint not null REFERENCES public.record_section(id),
    "column_address" text not null DEFAULT 'type',
    "created_at" timestamp with time zone default now()
);